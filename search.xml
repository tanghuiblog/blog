<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ssh之两个邮箱分别操作Github和Gitlab</title>
    <url>/2021/06/24/ssh%E4%B9%8B%E4%B8%A4%E4%B8%AA%E9%82%AE%E7%AE%B1%E5%88%86%E5%88%AB%E6%93%8D%E4%BD%9CGithub%E5%92%8CGitlab/</url>
    <content><![CDATA[<p>一般开发人员在公司工作需要用公司内部的gitlab，自己喜欢写一点小代码则会用到github，如何在一台机器上用两个账号分别操作两个不同的git地址呢？</p>
<span id="more"></span>
<h3 id="配置-Git-用户名、邮箱"><a href="#配置-Git-用户名、邮箱" class="headerlink" title="配置 Git 用户名、邮箱"></a>配置 Git 用户名、邮箱</h3><p>分别配置两个账号对应到global和local，且一般是常用的为global，所以我将个人邮箱配置为github账号，公司邮箱配置为公司gitlab账号。创建全局账号（github）</p>
<pre><code>git config —global user.name ‘my name’ 
git config —global user.email ‘12345678@qq.com’
</code></pre>
<p>local的本地账户的配置，只在用git init创建一个本地仓库时才有效：<br>    git config —local user.name ‘my company name’<br>    git config —local user.email ‘<a href="mailto:&#120;&#120;&#120;&#64;&#x78;&#120;&#x78;&#x2e;&#99;&#x6f;&#109;">&#120;&#120;&#120;&#64;&#x78;&#120;&#x78;&#x2e;&#99;&#x6f;&#109;</a>’</p>
<h3 id="生成-SSH-KEY"><a href="#生成-SSH-KEY" class="headerlink" title="生成 SSH KEY"></a>生成 SSH KEY</h3><p>打开终端使用命令： (ssh-keygen -t rsa -C “邮箱” -f github_id_rsa ) 生成ssh key.</p>
<pre><code>$ ssh-keygen -t rsa -C &quot;xxx@163.com&quot; -f github_id_rsa
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in github_id_rsa.
Your public key has been saved in github_id_rsa.pub.
The key fingerprint is:
SHA256:O53SSp3Qq+iuLCp7enD6p4fz4+zIhO8qfZMYAYoXGQk xxx@163.com
The key&#39;s randomart image is:
</code></pre>
<p>命令行进入到生成的.ssh 文件夹里： cd ~/.ssh文件夹。</p>
<p>.ssh里面有两个文件 github_id_rsa 和 github_id_rsa.pub</p>
<pre><code>$ ssh-keygen -t rsa -C &quot;xxx@xxx.cn&quot;
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/ellie/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/ellie/.ssh/id_rsa.
Your public key has been saved in /c/Users/ellie/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:5lcm+sVaejzkB27fyKtUrSQ9YDoZyR9as+gZuIqswI0 xxx@xxx.cn
The key&#39;s randomart image is:
</code></pre>
<p>.ssh里面有两个文件 id_rsa 和 id_rsa.pub<br>###配置 config文件<br>修改config文件，如果没有就创建。~/.ssh/config ，文件内容添加如下：</p>
<pre><code># github server
Host github.com
User xxx
IdentityFile ~/.ssh/github_id_rsa

# gitlab server
Host gitee.com
User aaa
IdentityFile ~/.ssh/id_rsa
</code></pre>
<p>###上传public key 到 Github/Gitlab<br>以Github为例，过程如下：</p>
<ul>
<li><ol>
<li>登录github</li>
</ol>
</li>
<li><ol start="2">
<li>点击右上方的Accounting settings图标</li>
</ol>
</li>
<li><ol start="3">
<li>选择 SSH key</li>
</ol>
</li>
<li><ol start="4">
<li>点击 Add SSH key<br>在出现的界面中填写SSH key的名称，填一个你自己喜欢的名称即可，然后将上面拷贝的~/.ssh/github_id_rsa.pub文件内容粘帖到key一栏，在点击“add key”按钮就可以了。<br>添加过程github会提示你输入一次你的github密码 ，确认后即添加完毕。 </li>
</ol>
</li>
</ul>
<p>上传Gitlab的过程一样。</p>
<p>###5. 验证是否OK<br>由于每个托管商的仓库都有唯一的后缀，比如 Github的是 <a href="mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;</a>:*，所以可以这样测试：</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p>而gitlab的可以这样测试：</p>
<pre><code>ssh -T git@gitlab.corp.xyz.com
</code></pre>
<p>如果能看到一些 Welcome 信息，说明就是 OK的了。</p>
]]></content>
      <categories>
        <category>开发环境</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
</search>
